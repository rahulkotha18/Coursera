
1. Write a CREATE TABLE statement for the Customer table. Choose data types appropriate for the DBMS used in your course. All columns are required (not null).

	create table Customer ( custno varchar(10) NOT NULL, custname varchar(20) NOT NULL, address varchar(20) NOT NULL, Internal char(1) NOT 		NULL, phone integer(10) NOT NULL,city varchar(20) NOT NULL,state varchar(10) NOT NULL,zip integer(10) NOT NULL,
	CONSTRAINT P_K PRIMARY KEY(custno) 
	);



2. Write a CREATE TABLE statement for the Facility table. Choose data types appropriate for the DBMS used in your course. All columns are required (not null).

	create table Facility ( facno varchar(8) NOT NULL, facname varchar(30) NOT NULL,
	CONSTRAINT P_K PRIMARY KEY(facno) 
	);

3. Write a CREATE TABLE statement for the Location table. Choose data types appropriate for the DBMS used in your course. LocName column is required (not null).

	create table Location ( locno varchar(8) NOT NULL, facname varchar(30), locname varchar(20) NOT NULL,
	CONSTRAINT P_K PRIMARY KEY(locno) 
	);

4. Identify the foreign key(s) and 1-M relationship(s) among the Customer, Facility, and Location tables. For each relationship, identify the parent table and the child table.

	One 1-M relationship: Facility (facno PK) â€“ Location (Facno FK)

5. Extend your CREATE TABLE statement from problem (3) with referential integrity constraints.
	
	alter table Location add CONSTRAINT F_K FOREIGN KEY(facno) REFERENCES Facility(facno);

	1. From examination of the sample data and your common understanding of scheduling and operation of events, are null values allowed for 	the foreign key in the Location table?  Why or why not? Extend the CREATE TABLE statement in problem (5) to enforce the null value 		restrictions if any.
		
		No. Null values should not be allowed in Location requires a facility as per sample data.

		create table Location ( locno varchar(8) NOT NULL, facname varchar(30) NOT NULL, locname varchar(20) NOT NULL,
		CONSTRAINT P_K PRIMARY KEY(locno) , CONSTRAINT F_K FOREIGN KEY(facno) REFERENCES Facility(facno)
		);

	2. Extend your CREATE TABLE statement for the Facility table (problem 2) with a unique constraint for FacName. Use an external named 		constraint clause for the unique constraint.
	
		alter table Facility add CONSTRAINT unique_facname UNIQUE(facname);


